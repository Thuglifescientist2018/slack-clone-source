{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-challenge-slack-clone\\\\src\\\\components\\\\DarkMode.js\",\n    _s = $RefreshSig$();\n\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToggleDark = () => {\n  _s();\n\n  const [theme, setTheme] = useState(\"dark\");\n  const [isDarkMode, setIsDarkMode] = useState(() => true);\n\n  const themeToggler = () => {\n    isDarkMode ? setTheme(\"dark\") : setTheme(\"light\");\n    console.log(\"Here is the theme\", theme);\n  };\n\n  useEffect(() => {\n    themeToggler();\n  });\n  return /*#__PURE__*/_jsxDEV(DarkModeToggle, {\n    onChange: setIsDarkMode,\n    checked: isDarkMode,\n    size: 80\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ToggleDark, \"2dUsgNQwV4pxgGQ+ZDOGUk8A9CU=\");\n\n_c = ToggleDark;\nconst universalColors = styled.html`\n* {\n  background: orange !important;\n}\n\n\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleDark\");","map":{"version":3,"sources":["D:/react-challenge-slack-clone/src/components/DarkMode.js"],"names":["DarkModeToggle","styled","useState","useEffect","ToggleDark","theme","setTheme","isDarkMode","setIsDarkMode","themeToggler","console","log","universalColors","html"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,MAAD,CAAlC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,MAAM,IAAP,CAA5C;;AACA,QAAMO,YAAY,GAAG,MAAO;AAC1BF,IAAAA,UAAU,GAAED,QAAQ,CAAC,MAAD,CAAV,GAAoBA,QAAQ,CAAC,OAAD,CAAtC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCN,KAAjC;AACD,GAHD;;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY;AACb,GAFQ,CAAT;AAGA,sBACE,QAAC,cAAD;AACE,IAAA,QAAQ,EAAED,aADZ;AAEE,IAAA,OAAO,EAAED,UAFX;AAGE,IAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAlBI;;GAAMH,U;;KAAAA,U;AAqBb,MAAMQ,eAAe,GAAGX,MAAM,CAACY,IAAK;AACpC;AACA;AACA;AACA;AACA;AACA,CANA","sourcesContent":["import DarkModeToggle from \"react-dark-mode-toggle\";\r\nimport styled from 'styled-components';\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\nexport const ToggleDark = () => {\r\n    const [theme, setTheme] = useState(\"dark\");\r\n    const [isDarkMode, setIsDarkMode] = useState(() => true);\r\n    const themeToggler = () =>  {\r\n      isDarkMode? setTheme(\"dark\"): setTheme(\"light\");\r\n      console.log(\"Here is the theme\", theme);\r\n    }\r\n    useEffect(() => {\r\n      themeToggler();\r\n    })\r\n    return (\r\n      <DarkModeToggle\r\n        onChange={setIsDarkMode}\r\n        checked={isDarkMode}\r\n        size={80}\r\n      />\r\n    );\r\n    \r\n  };\r\n\r\n\r\nconst universalColors = styled.html`\r\n* {\r\n  background: orange !important;\r\n}\r\n\r\n\r\n`\r\n  \r\n  \r\n"]},"metadata":{},"sourceType":"module"}