{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-challenge-slack-clone\\\\src\\\\components\\\\DarkMode.js\",\n    _s = $RefreshSig$();\n\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToggleDark = () => {\n  _s();\n\n  const [theme, setTheme] = useState(\"dark\");\n  const [isDarkMode, setIsDarkMode] = useState(() => true);\n\n  const themeToggler = () => {\n    isDarkMode ? setTheme(\"light\") : setTheme(\"dark\");\n    console.log(\"Here is the theme\", theme);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DarkModeToggle, {\n    onChange: setIsDarkMode,\n    checked: isDarkMode,\n    size: 80\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ToggleDark, \"WizsZRCxHnK/DgEePzW/bCYwEac=\");\n\n_c = ToggleDark;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleDark\");","map":{"version":3,"sources":["D:/react-challenge-slack-clone/src/components/DarkMode.js"],"names":["DarkModeToggle","styled","useState","ToggleDark","theme","setTheme","isDarkMode","setIsDarkMode","themeToggler","console","log"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,MAAD,CAAlC;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,MAAM,IAAP,CAA5C;;AACA,QAAMM,YAAY,GAAG,MAAO;AAC1BF,IAAAA,UAAU,GAAED,QAAQ,CAAC,OAAD,CAAV,GAAqBA,QAAQ,CAAC,MAAD,CAAvC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCN,KAAjC;AACD,GAHD;;AAIA,sBACE,QAAC,cAAD;AACE,IAAA,QAAQ,EAAEG,aADZ;AAEE,IAAA,OAAO,EAAED,UAFX;AAGE,IAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAfI;;GAAMH,U;;KAAAA,U","sourcesContent":["import DarkModeToggle from \"react-dark-mode-toggle\";\r\nimport styled from 'styled-components';\r\nimport {useState} from 'react';\r\n\r\n\r\nexport const ToggleDark = () => {\r\n    const [theme, setTheme] = useState(\"dark\");\r\n    const [isDarkMode, setIsDarkMode] = useState(() => true);\r\n    const themeToggler = () =>  {\r\n      isDarkMode? setTheme(\"light\"): setTheme(\"dark\");\r\n      console.log(\"Here is the theme\", theme);\r\n    }\r\n    return (\r\n      <DarkModeToggle\r\n        onChange={setIsDarkMode}\r\n        checked={isDarkMode}\r\n        size={80}\r\n      />\r\n    );\r\n    \r\n  };\r\n\r\n\r\n  \r\n  \r\n"]},"metadata":{},"sourceType":"module"}