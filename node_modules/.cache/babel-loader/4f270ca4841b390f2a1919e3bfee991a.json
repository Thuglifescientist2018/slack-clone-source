{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/react-challenge-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"D:/react-challenge-slack-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;import React,{useEffect,useState}from'react';import styled from'styled-components';import InfoOutlinedIcon from'@material-ui/icons/InfoOutlined';import ChatInput from'./ChatInput';import ChatMessage from'./ChatMessage';import db from'../firebase';import{useParams}from'react-router-dom';import firebase from'firebase';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Chat(_ref){var user=_ref.user;var _useParams=useParams(),channelId=_useParams.channelId;var _useState=useState({name:\"youtube\"}),_useState2=_slicedToArray(_useState,2),channel=_useState2[0],setChannel=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var getMessages=function getMessages(){db.collection(\"rooms\").doc(channelId).collection(\"messages\").orderBy('timestamp','asc').onSnapshot(function(snapshot){var messages=snapshot.docs.map(function(doc){return doc.data();});console.log(messages);setMessages(messages);});};var sendMessage=function sendMessage(text){if(channelId){var payload={text:text,timestamp:firebase.firestore.Timestamp.now(),user:user.name,userImage:user.photo};db.collection(\"rooms\").doc(channelId).collection(\"messages\").add(payload);console.log(payload);}};var getChannel=function getChannel(){db.collection('rooms').doc(channelId).onSnapshot(function(snapshot){setChannel(snapshot.data());});};useEffect(function(){getChannel();getMessages();},[channelId]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Header,{id:\"chat-header\",children:[/*#__PURE__*/_jsxs(Channel,{children:[/*#__PURE__*/_jsx(ChannelName,{children:channel.name}),/*#__PURE__*/_jsx(ChannelInfo,{children:\"Where Creativity and Divergent Thinking Matters\"})]}),/*#__PURE__*/_jsxs(ChannelDetails,{children:[/*#__PURE__*/_jsx(\"div\",{children:\"Details\"}),/*#__PURE__*/_jsx(Info,{})]})]}),/*#__PURE__*/_jsx(MessageContainer,{id:\"chat-messages\",children:messages.map(function(data){return/*#__PURE__*/_jsx(ChatMessage,{text:data.text,name:data.user,image:data.userImage,timestamp:data.timestamp});})}),/*#__PURE__*/_jsx(ChatInput,{id:\"chatInputs\",sendMessage:sendMessage})]});}export default Chat;var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\nbackground: url('https://source.unsplash.com/in9-n0JwgZ0/1920x1080') no-repeat center center/cover;\\n    display: grid;\\n    grid-template-rows: 64px auto min-content;\\n    min-height: 0;\\n\"])));var Channel=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\"])));var ChannelDetails=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    color: #606060;\\n\"])));var ChannelName=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    font-weight: 700;\\n\"])));var ChannelInfo=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    font-weight: 400;\\n    color: #606060;\\n    font-size: 13px;\\n    margin-top: 8px;\\n    color: #ddd;\\n\"])));var Info=styled(InfoOutlinedIcon)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    margin-left: 10px;\\n\"])));var Header=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    padding-left: 20px;\\n    padding-right: 20px;\\n    display: flex;\\n    align-items: center;\\n    border-bottom: 1px solid rgba(83, 39, 83,0.3);\\n    justify-content: space-between;\\n    color: #ddd;\\n\"])));var MessageContainer=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\ndisplay: flex;\\nflex-direction: column;\\noverflow-y: scroll;\\n\"])));","map":{"version":3,"sources":["D:/react-challenge-slack-clone/src/components/Chat.js"],"names":["React","useEffect","useState","styled","InfoOutlinedIcon","ChatInput","ChatMessage","db","useParams","firebase","Chat","user","channelId","name","channel","setChannel","messages","setMessages","getMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","console","log","sendMessage","text","payload","timestamp","firestore","Timestamp","now","userImage","photo","add","getChannel","Container","div","Channel","ChannelDetails","ChannelName","ChannelInfo","Info","Header","MessageContainer"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport ChatInput from './ChatInput'\r\nimport ChatMessage from './ChatMessage';\r\nimport db from '../firebase';\r\nimport { useParams } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nfunction Chat({user}) {\r\n    let {channelId} = useParams();\r\n    const [channel, setChannel] = useState({name: \"youtube\"});\r\n    const [ messages, setMessages ] = useState([]);\r\n\r\n    const getMessages = () =>  {\r\n        db.collection(\"rooms\")\r\n        .doc(channelId)\r\n        .collection(\"messages\")\r\n        .orderBy('timestamp', 'asc')\r\n        .onSnapshot((snapshot) => {\r\n            let messages = snapshot.docs.map((doc)=>doc.data());\r\n            console.log(messages);\r\n            setMessages(messages);\r\n        })\r\n    }\r\n\r\n    const sendMessage =  (text) => { \r\n        if(channelId) {\r\n            let payload = {\r\n                text: text,\r\n                timestamp: firebase.firestore.Timestamp.now(),\r\n                user: user.name,\r\n                userImage: user.photo\r\n            }\r\n            db.collection(\"rooms\").doc(channelId).collection(\"messages\").add(payload);\r\n            console.log(payload)\r\n        }\r\n    }\r\n    const getChannel = () => {\r\n        db.collection('rooms')\r\n        .doc(channelId)\r\n        .onSnapshot((snapshot) => {\r\n           setChannel(snapshot.data()); \r\n           \r\n        })\r\n\r\n    }\r\n\r\nuseEffect(() => {\r\n    getChannel();\r\n    getMessages();\r\n    \r\n\r\n    \r\n}, [channelId]);\r\n    return (\r\n            <Container>\r\n                <Header id=\"chat-header\">\r\n                    <Channel>\r\n                        <ChannelName>\r\n                        {channel.name}\r\n                        </ChannelName>\r\n                        <ChannelInfo>\r\n                            Where Creativity and Divergent Thinking Matters\r\n                        </ChannelInfo>\r\n                    </Channel>\r\n                <ChannelDetails>\r\n                <div>\r\n                        Details\r\n                    </div>\r\n                    <Info />\r\n                </ChannelDetails>\r\n                </Header>\r\n                <MessageContainer id=\"chat-messages\">\r\n                        {messages.map((data) => (\r\n                            <ChatMessage \r\n                            text={data.text}\r\n                            name={data.user}\r\n                            image={data.userImage}\r\n                            timestamp={data.timestamp}\r\n                            />\r\n                            \r\n                        ))}\r\n                </MessageContainer>\r\n                <ChatInput id=\"chatInputs\" sendMessage={sendMessage}/>\r\n            </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst Container = styled.div`\r\nbackground: url('https://source.unsplash.com/in9-n0JwgZ0/1920x1080') no-repeat center center/cover;\r\n    display: grid;\r\n    grid-template-rows: 64px auto min-content;\r\n    min-height: 0;\r\n`\r\n\r\nconst Channel = styled.div``\r\n\r\nconst ChannelDetails = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    color: #606060;\r\n`\r\n\r\nconst ChannelName = styled.div`\r\n    font-weight: 700;\r\n`\r\n\r\nconst ChannelInfo = styled.div`\r\n    font-weight: 400;\r\n    color: #606060;\r\n    font-size: 13px;\r\n    margin-top: 8px;\r\n    color: #ddd;\r\n`\r\n\r\nconst Info = styled(InfoOutlinedIcon)`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst Header = styled.div`\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 1px solid rgba(83, 39, 83,0.3);\r\n    justify-content: space-between;\r\n    color: #ddd;\r\n`\r\n\r\nconst MessageContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\noverflow-y: scroll;\r\n`\r\n"]},"metadata":{},"sourceType":"module"}