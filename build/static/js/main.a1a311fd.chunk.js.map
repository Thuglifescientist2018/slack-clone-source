{"version":3,"sources":["components/ChatInput.js","components/ChatMessage.js","firebase.js","components/Chat.js","components/numb.mp3","components/Login.js","components/Header.js","data/SidebarData.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["ChatInput","sendMessage","useState","input","setInput","Container","InputContainer","onChange","e","target","value","type","placeholder","SendButton","onClick","preventDefault","TextFormat","Left","id","Right","styled","div","button","Send","SendIcon","ChatMessage","text","name","image","timestamp","UserAvatar","src","alt","MessageContent","Name","Date","toDate","toUTCString","Text","span","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Chat","user","channelId","useParams","channel","setChannel","messages","setMessages","useEffect","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","console","log","Header","Channel","ChannelName","ChannelInfo","ChannelDetails","Info","MessageContainer","userImage","payload","Timestamp","now","photo","add","InfoOutlinedIcon","Login","props","className","Content","SlackImg","mp3_file","controls","style","outline","opacity","SignInButton","signInWithPopup","then","result","newUser","displayName","photoURL","localStorage","setItem","JSON","stringify","setUser","catch","error","alert","message","section","img","signOut","Main","SearchContainer","Search","UserContainer","UserImage","sidebarItemsData","icon","Sidebar","history","useHistory","WorkspaceContainer","NewMessage","MainChannels","item","MainChannelItem","ChannelsContainer","NewChannelContainer","promptName","prompt","ChannelsList","rooms","push","App","setRooms","parse","getItem","removeItem","path","CreateOrSelect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1a311fd.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicTwoToneIcon from '@material-ui/icons/FormatItalicTwoTone';\r\nimport StrikethroughSTwoToneIcon from '@material-ui/icons/StrikethroughSTwoTone';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport EmojiEmotionsOutlinedIcon from '@material-ui/icons/EmojiEmotionsOutlined';\r\nimport AttachFileOutlinedIcon from '@material-ui/icons/AttachFileOutlined';\r\nimport {Button} from '@material-ui/core';\r\n\r\nfunction ChatInput({ sendMessage }) {\r\n    const [input, setInput] = useState(\"\");\r\n    const send = (e) => {\r\n        e.preventDefault();\r\n        if(!input) return;\r\n        sendMessage(input)\r\n    }\r\n    return (\r\n        <Container>\r\n            <InputContainer>\r\n                <form>\r\n                    <input onChange={(e) => setInput(e.target.value)} value={input} type=\"text\" placeholder=\"Message here...\"/>\r\n                    <SendButton onClick={send} type=\"submit\">\r\n                        <Send/>\r\n                       \r\n                    </SendButton>\r\n                </form>\r\n                <TextFormat>\r\n                        <Left>\r\n                            <FormatBoldIcon id=\"fBI\"/>\r\n                            <FormatItalicTwoToneIcon id=\"fiI\"/>\r\n                            <StrikethroughSTwoToneIcon id=\"stI\"/>\r\n                            <CodeIcon id=\"cI\"/>\r\n                            <LinkIcon/>\r\n                            <FormatListBulletedIcon/>\r\n                        </Left>\r\n                       \r\n                        <Right>\r\n                            <FontDownloadIcon/>\r\n                            <AlternateEmailIcon/>\r\n                            <EmojiEmotionsOutlinedIcon/>\r\n                            <AttachFileOutlinedIcon/>\r\n                        </Right>\r\n                </TextFormat>\r\n            </InputContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n\r\nconst Container = styled.div`\r\n::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 5px grey; \r\n    border-radius: 10px;\r\n  }\r\n   \r\n    padding: 0 20px;\r\n    padding-bottom: 24px;\r\n    #lightBtn, darkBtn {\r\n        margin: 0 1rem;\r\n    }\r\n  #darkBtn {\r\n      background: #333;\r\n      color: #f4f4f4\r\n  }\r\n  #lightBtn  {\r\n      background: #f4f4f4;\r\n      color: #333;\r\n  }\r\n   \r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    border: 1px solid #8D8D8E;\r\n    form {\r\n        display:flex;\r\n        height: 42px;\r\n        align-items: center;\r\n        padding-left: 10px;;\r\n        input {\r\n            flex: 1;\r\n            border: none;\r\n            font-size: 13px;\r\n            background: rgba(0, 0, 0, 0);\r\n            color: #f4f4f4;\r\n            \r\n        }\r\n        input:focus {\r\n            outline:none\r\n        }\r\n    }\r\n`;\r\nconst SendButton = styled.button`\r\nbackground: #007a5a;\r\nborder-radius: 2px;\r\nwidth: 32px;\r\nheight: 32px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nmargin-right: 5px;\r\ncursor: pointer;\r\nborder: none;\r\n.MuiSvgIcon-root {\r\n    width: 18px;\r\n}\r\n\r\n`;\r\n\r\nconst Send = styled(SendIcon)`\r\n    color: #D9D9D9;\r\n`;\r\n\r\nconst TextFormat = styled.div`\r\nheight: 40px;\r\nborder-top: 1px solid #8D8D8E;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\n`;\r\n\r\nconst Left = styled.div`\r\n    font-weight: 400;\r\n    color: white;\r\n`;\r\n\r\nconst Right = styled.div`\r\nfont-weight: 400;\r\ncolor: white;\r\n`;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction ChatMessage({text, name, image, timestamp}) {\r\n    return (\r\n        <Container>\r\n           <UserAvatar>\r\n               <img src={image} alt=\"\"/>\r\n           </UserAvatar>\r\n           <MessageContent>\r\n               <Name>\r\n                {name}\r\n               <span>{new Date(timestamp.toDate()).toUTCString()}</span>\r\n                </Name>\r\n               <Text>\r\n        \t       {text}\r\n               </Text>\r\n           </MessageContent>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChatMessage\r\n\r\nconst Container = styled.div`\r\n    padding: 8px 20px;\r\n    margin: 20px 0;\r\n    display:flex;\r\n    align-items: center;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    color: white;\r\n    span {\r\n        color: #ddd !important; \r\n    }\r\n    transition: background 0.5s;\r\n    cursor: pointer;\r\n    border-bottom-right-radius: 90px;\r\n    border-top-left-radius: 90px ;\r\n    &:hover {\r\n        background: rgba(55, 55, 55, 0.8);\r\n        box-shadow: inset -2px -2px 5px rgb(100, 100, 100);\r\n        color: #ddd;\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst UserAvatar = styled.div`\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 2px;\r\n    overflow: hidden;\r\n    margin-right:  8px;\r\n    img {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst MessageContent = styled.div`\r\n display: flex;\r\n flex-direction: column;\r\n\r\n \r\n`;\r\n\r\nconst Name = styled.span`\r\n    font-weight: 900;\r\n    font-size: 15px;\r\n    line-height: 1.4;\r\n    span {\r\n        margin-left: 8px;\r\n        font-weight: 400;\r\n        color: rgb(97, 96, 97);\r\n        font-size; 15px;\r\n    }\r\n`;\r\n\r\nconst Text = styled.span``;","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCsh2LN0mLRp78wp247iIbuvUi8aqNWwQI\",\r\n  authDomain: \"react-challenge-slack-clone2.firebaseapp.com\",\r\n  projectId: \"react-challenge-slack-clone2\",\r\n  storageBucket: \"react-challenge-slack-clone2.appspot.com\",\r\n  messagingSenderId: \"734255660744\",\r\n  appId: \"1:734255660744:web:a97e6617f756d2b0c26ffd\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport default db;\r\nexport {auth, provider}\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport ChatInput from './ChatInput'\r\nimport ChatMessage from './ChatMessage';\r\nimport db from '../firebase';\r\nimport { useParams } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\n\r\nfunction Chat({user}) {\r\n    let {channelId} = useParams();\r\n    const [channel, setChannel] = useState({name: \"youtube\"});\r\n    const [ messages, setMessages ] = useState([]);\r\n\r\n    const getMessages = () =>  {\r\n        db.collection(\"rooms\")\r\n        .doc(channelId)\r\n        .collection(\"messages\")\r\n        .orderBy('timestamp', 'asc')\r\n        .onSnapshot((snapshot) => {\r\n            let messages = snapshot.docs.map((doc)=>doc.data());\r\n            console.log(messages);\r\n            setMessages(messages);\r\n        })\r\n    }\r\n\r\n    const sendMessage =  (text) => { \r\n        if(channelId) {\r\n            let payload = {\r\n                text: text,\r\n                timestamp: firebase.firestore.Timestamp.now(),\r\n                user: user.name,\r\n                userImage: user.photo\r\n            }\r\n            db.collection(\"rooms\").doc(channelId).collection(\"messages\").add(payload);\r\n            console.log(payload)\r\n        }\r\n    }\r\n    const getChannel = () => {\r\n        db.collection('rooms')\r\n        .doc(channelId)\r\n        .onSnapshot((snapshot) => {\r\n           setChannel(snapshot.data()); \r\n           \r\n        })\r\n\r\n    }\r\n\r\nuseEffect(() => {\r\n    getChannel();\r\n    getMessages();\r\n    \r\n\r\n    \r\n}, [channelId]);\r\n    return (\r\n            <Container>\r\n                <Header id=\"chat-header\">\r\n                    \r\n                    <Channel>\r\n                        <ChannelName>\r\n                        {channel.name}\r\n                        </ChannelName>\r\n                        <ChannelInfo>\r\n                            Where Creativity and Divergent Thinking Matters\r\n                        </ChannelInfo>\r\n                    </Channel>\r\n                <ChannelDetails>\r\n                <div>\r\n                        Details\r\n                    </div>\r\n                    <Info />\r\n                </ChannelDetails>\r\n                </Header>\r\n                <MessageContainer id=\"chat-messages\">\r\n                        {messages.map((data) => (\r\n                            <ChatMessage \r\n                            text={data.text}\r\n                            name={data.user}\r\n                            image={data.userImage}\r\n                            timestamp={data.timestamp}\r\n                            />\r\n                            \r\n                        ))}\r\n                </MessageContainer>\r\n                <ChatInput id=\"chatInputs\" sendMessage={sendMessage}/>\r\n            </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst Container = styled.div`\r\nbackground: url('https://source.unsplash.com/in9-n0JwgZ0/1920x1080') no-repeat center center/cover;\r\n    display: grid;\r\n    grid-template-rows: 64px auto min-content;\r\n    min-height: 0;\r\n`\r\n\r\nconst Channel = styled.div``\r\n\r\nconst ChannelDetails = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    color: #606060;\r\n`\r\n\r\nconst ChannelName = styled.div`\r\n    font-weight: 700;\r\n`\r\n\r\nconst ChannelInfo = styled.div`\r\n    font-weight: 400;\r\n    color: #606060;\r\n    font-size: 13px;\r\n    margin-top: 8px;\r\n    color: #ddd;\r\n`\r\n\r\nconst Info = styled(InfoOutlinedIcon)`\r\n    margin-left: 10px;\r\n`\r\n\r\nconst Header = styled.div`\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 1px solid rgba(83, 39, 83,0.3);\r\n    justify-content: space-between;\r\n    color: #ddd;\r\n`\r\n\r\nconst MessageContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\noverflow-y: scroll;\r\n`\r\n","export default __webpack_public_path__ + \"static/media/numb.ffe18e3c.mp3\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Button} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport { auth, provider } from  '../firebase';\r\nimport mp3_file from  './numb.mp3';\r\n\r\nfunction Login(props) {\r\n    const  signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then((result) => {\r\n            const newUser = {\r\n                name: result.user.displayName,\r\n                photo: result.user.photoURL,\r\n            }\r\n            localStorage.setItem('user', JSON.stringify(newUser));\r\n            props.setUser(newUser);\r\n        })\r\n        .catch((error) => {\r\n            alert(error.message)\r\n        })\r\n    }\r\n    return (\r\n        <Container>\r\n            <div className=\"container\">\r\n                <Content>\r\n                    <SlackImg src=\"http://assets.stickpng.com/images/5cb480cd5f1b6d3fbadece79.png\"/>\r\n                    <h1>Sign In To Slack</h1>\r\n                    <p>While Listen to this Awesome song</p>\r\n                    <audio src={mp3_file} controls style={{outline: \"none\", opacity: \"0.8\"}}></audio>\r\n                    <SignInButton onClick={()=>signIn()}>\r\n                        Sign In With Google\r\n                    </SignInButton>\r\n                </Content>\r\n                \r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\nconst Container = styled.section`\r\nbackground: url('https://source.unsplash.com/in9-n0JwgZ0/1920x1080') no-repeat center center/cover;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nheight: 100vh;\r\n     .container {\r\n         font-family: 'Advent Pro', sans-serif;\r\n         display: flex; \r\n         justify-content: center;\r\n         align-items: center;\r\n         flex-direction: column;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        box-shadow: inset 5px 5px 10px #F8E6F4;\r\n         color: white;\r\n         padding: 1rem 2rem;\r\n         border-radius: 90px;\r\n\r\n     }\r\n\r\n`;\r\nconst Content = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center; \r\nalign-items: center;\r\n`;\r\nconst SlackImg = styled.img`\r\n     height: 100px;\r\n`;\r\n\r\nconst SignInButton = styled.button`\r\n        margin-top:50px;\r\n        background-color: #0a8d48;\r\n        color: white;\r\n        border: none;\r\n        height: 40px;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        font-size:15px;\r\n`;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\nfunction Header({user, signOut}) {\r\n    return (\r\n        <Container>\r\n            <Main>\r\n                <AccessTimeIcon />\r\n                <SearchContainer>\r\n                    <Search>\r\n                        <input type=\"text\" placeholder=\"Search...\" />\r\n                    </Search>\r\n                </SearchContainer>\r\n                <HelpOutlineIcon />\r\n\r\n            </Main>\r\n            <UserContainer>\r\n                <Name>\r\n                    {user.name}\r\n                </Name>\r\n                <UserImage onClick={signOut}>\r\n                    <img src={user.photo} alt=\"random one\" />\r\n                </UserImage>\r\n            </UserContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\nconst Container = styled.div`\r\n    background: #350d36;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    box-shadow: 0 1px 0 0 rgb(255 255 255 / 10%);\r\n`\r\n\r\nconst Main = styled.div`\r\n    display: flex;\r\n    margin-right: 16px;\r\n    margin-left 16px;\r\n`\r\n\r\nconst SearchContainer = styled.div`\r\n    min-width: 400px;\r\n    margin-left: 16px;\r\n    margin-right: 16px;\r\n`\r\n\r\nconst Search = styled.div`\r\n    box-shadow: inset 0 0 0 1px rgb(104 74 104);\r\n    width: 100%;\r\n    border-radius: 6px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input {\r\n        background-color: transparent;\r\n        border: none;\r\n        padding-left: 8px;\r\n        padding-right: 8px;\r\n        color: white;\r\n        padding-top: 4px;\r\n        padding-bottom: 4px;\r\n    }\r\n\r\n    input:focus {\r\n        outline: none;\r\n    }\r\n\r\n\r\n`\r\n\r\nconst UserContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-right: 16px;\r\n    position: absolute;\r\n    right: 0;\r\n`\r\n\r\nconst Name = styled.div`\r\n    padding-right: 16px;\r\n`\r\n\r\nconst UserImage = styled.div`\r\n    width: 28px;\r\n    height: 28px;\r\n    border: 2px solid white;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n\r\n    img {\r\n        width: 100%;\r\n    }\r\n`\r\n","import MessageIcon from '@material-ui/icons/Message';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nexport const sidebarItemsData = [\r\n    {\r\n        icon: <MessageIcon />,\r\n        text: \"Thread\"\r\n    },\r\n    {\r\n        icon: <InboxIcon />,\r\n        text: \"All DMs\"\r\n    },\r\n    {\r\n        icon: <DraftsIcon />,\r\n        text: \"Mentions & Reactions\"\r\n    },\r\n    {\r\n        icon: <BookmarkBorderIcon />,\r\n        text: \"Save Items\"\r\n    },\r\n    {\r\n        icon: <PeopleIcon />,\r\n        text: \"Peoples & Groups\"\r\n    },\r\n    {\r\n        icon: <AppsIcon />,\r\n        text: \"More\"\r\n    }\r\n]","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { sidebarItemsData } from '../data/SidebarData'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport db from '../firebase'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction Sidebar(props) {\r\n    const history = useHistory();\r\n    const goToChannel = (id) => {\r\n        if(id) {\r\n            console.log(id);\r\n            history.push(`/room/${id}`);\r\n        }\r\n    }\r\n    const addChannel = () =>  {\r\n        const promptName = prompt(\"Enter Channel Name: \");\r\n        if(promptName) {\r\n            db.collection('rooms').add({\r\n                name: promptName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <WorkspaceContainer>\r\n                <Name>\r\n                    ThugLifeScientist\r\n                </Name>\r\n                <NewMessage>\r\n                    <AddCircleOutlineIcon />\r\n                </NewMessage>\r\n            </WorkspaceContainer>\r\n            <MainChannels>\r\n                {\r\n                    sidebarItemsData.map(item => (\r\n                        <MainChannelItem>\r\n                            {item.icon}\r\n                            {item.text}\r\n                        </MainChannelItem>\r\n                    ))\r\n                }\r\n            </MainChannels>\r\n            <ChannelsContainer>\r\n                <NewChannelContainer>\r\n                    <div>\r\n                        Channels\r\n                    </div>\r\n                    <AddIcon onClick={addChannel} />\r\n                </NewChannelContainer>\r\n                <ChannelsList>\r\n                   {\r\n                       props.rooms.map(item => (\r\n                            <Channel onClick={() => goToChannel(item.id)}>\r\n                             # {item.name}\r\n                            </Channel>\r\n                       ))\r\n                   }\r\n                            \r\n                        \r\n                </ChannelsList>\r\n            </ChannelsContainer>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n\r\nconst Container = styled.div`\r\n    background: url('https://source.unsplash.com/ynFOw5ame58/400x1200');\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: inset -10px 10px 10px white;\r\n\r\n`\r\n\r\nconst WorkspaceContainer = styled.div`\r\n    color: white;\r\n    height: 64px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid  #532753;\r\n    background: rgba(0, 0, 0, 0.3);\r\n`\r\n\r\nconst Name = styled.div``\r\n\r\nconst NewMessage = styled.div`\r\n    width: 36px;\r\n    height: 36px;\r\n    background: white;\r\n    color: #3F0E40;\r\n    fill: #3F0E40;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n`\r\n\r\nconst MainChannels = styled.div`\r\n    padding-top: 20px;\r\n    background: rgba(0, 0, 0, 0.5);\r\n`\r\n\r\nconst MainChannelItem = styled.div`\r\n    color: rgb(188,171,188);\r\n    display: grid;\r\n    grid-template-columns: 15% auto;\r\n    min-height: 28px;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    cursor: pointer;\r\n    :hover {\r\n        background: white;\r\n        color: black;\r\n    }\r\n`\r\n\r\nconst ChannelsContainer = styled.div`\r\n    color: rgb(188,171,188);\r\n    margin-top: 10px;\r\n    background: rgba(0, 0, 0, 0.6);\r\n    padding: 0.75rem 1rem;\r\n`\r\n\r\nconst NewChannelContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 28px;\r\n    padding-left: 19px;\r\n    padding-right: 12px;\r\n`\r\n\r\nconst ChannelsList = styled.div``\r\n\r\nconst Channel = styled.div`\r\n    height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 19px;\r\n    cursor: pointer;\r\n        transition: background 0.5s;\r\n    :hover {\r\n        background: white;\r\n        color: black;\r\n    }\r\n`\r\n","import './App.css';\r\nimport { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Chat from './components/Chat'\r\nimport Login from './components/Login'\r\nimport styled from 'styled-components'\r\nimport Header from './components/Header'\r\nimport Sidebar from './components/Sidebar'\r\nimport db from './firebase'\r\nimport { auth, provider } from \"./firebase\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  const [rooms, setRooms] = useState([]) \r\n  const [ user, setUser ] = useState(JSON.parse(localStorage.getItem('user'))); \r\n\r\n  const getChannels = () => {\r\n    db.collection('rooms').onSnapshot((snapshot) => {\r\n      setRooms(snapshot.docs.map((doc) => {\r\n        return { id: doc.id, name: doc.data().name }\r\n      }))\r\n    })\r\n\r\n  }\r\n\r\n  const signOut = () => {\r\n    auth.signOut().then(()=>{\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n    })\r\n  }\r\n\r\n  useEffect(() =>{\r\n    getChannels();\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        {\r\n          !user ?\r\n          <Login setUser={setUser}/>\r\n          :\r\n          <Container>\r\n            <Header signOut={signOut} user={user} />\r\n            <Main>\r\n              <Sidebar  rooms={rooms}  /> \r\n              <Switch>\r\n                <Route path=\"/room/:channelId\">\r\n                  <Chat user={user} />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <CreateOrSelect>\r\n                          <div className=\"container\">\r\n                            <h2>Create or Select Channel</h2>\r\n                          </div>\r\n                  </CreateOrSelect>\r\n                </Route>\r\n              </Switch>\r\n            </Main>\r\n          </Container>\r\n        }\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: 38px minmax(0, 1fr);\r\n`\r\n\r\nconst Main = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 260px auto;\r\n  `\r\n\r\nconst CreateOrSelect = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items:center;\r\nbackground: url('https://source.unsplash.com/u27Rrbs9Dwc/1920x1080') no-repeat center center/cover;\r\ncolor: white;\r\n.container  {\r\n  background: rgba(0, 0, 0, 0.8) no-repeat center center/cover;\r\n  height: 40vh;\r\n  width: 40vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items:center;\r\n  font-size: 9rem;\r\n  a\r\n}\r\n`;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}